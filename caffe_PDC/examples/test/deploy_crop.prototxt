name: "facial_point_net"
input: "data"
input_dim: 1
input_dim: 3
input_dim: 224
input_dim: 224

## global layer

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
#    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    kernel_size: 5
#    pad: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv5"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}

layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}

layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
}

layer {
  name: "68point"
  type: "InnerProduct"
  bottom: "fc7"
  top: "68point"
  inner_product_param {
    num_output: 136
  }
}

layer {
  name: "loc_reg_"
  type: "InnerProduct"
  bottom: "68point"
  top: "theta"

  inner_product_param {
    num_output: 4
  }
}

# transform data based on theta
layer {
  name: "st_layer"
  type: "SpatialTransformer"
  bottom: "data"
  bottom: "theta"
  top: "local/data"
  st_param {
      to_compute_dU: false
      output_H: 224
      output_W: 224
      theta_1_2: 0
      theta_2_1: 0
    }
}

## local layer 1
layer {
  name: "local_conv1"
  type: "Convolution"
  bottom: "local/data"
  top: "local/conv1"
  convolution_param {
    num_output: 96
#    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "local_relu1"
  type: "ReLU"
  bottom: "local/conv1"
  top: "local/conv1"
}
layer {
  name: "local_norm1"
  type: "LRN"
  bottom: "local/conv1"
  top: "local/norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  name: "local_pool1"
  type: "Pooling"
  bottom: "local/norm1"
  top: "local/pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  name: "local_conv2"
  type: "Convolution"
  bottom: "local/pool1"
  top: "local/conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 5
#    pad: 2
  }
}
layer {
  name: "local_relu2"
  type: "ReLU"
  bottom: "local/conv2"
  top: "local/conv2"
}
layer {
  name: "local_pool2"
  type: "Pooling"
  bottom: "local/conv2"
  top: "local/pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "local_conv3"
  type: "Convolution"
  bottom: "local/pool2"
  top: "local/conv3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "local_relu3"
  type: "ReLU"
  bottom: "local/conv3"
  top: "local/conv3"
}
layer {
  name: "local_conv4"
  type: "Convolution"
  bottom: "local/conv3"
  top: "local/conv4"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "local_relu4"
  type: "ReLU"
  bottom: "local/conv4"
  top: "local/conv4"
}
layer {
  name: "local_conv5"
  type: "Convolution"
  bottom: "local/conv4"
  top: "local/conv5"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "local_relu5"
  type: "ReLU"
  bottom: "local/conv5"
  top: "local/conv5"
}
layer {
  name: "local_pool3"
  type: "Pooling"
  bottom: "local/conv5"
  top: "local/pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}
layer {
  name: "local_fc6"
  type: "InnerProduct"
  bottom: "local/pool3"
  top: "local/fc6"
  inner_product_param {
    num_output: 4096
  }
}

layer {
  name: "local_relu6"
  type: "ReLU"
  bottom: "local/fc6"
  top: "local/fc6"
}
layer {
  name: "local_drop6"
  type: "Dropout"
  bottom: "local/fc6"
  top: "local/fc6"
}
layer {
  name: "local_fc7"
  type: "InnerProduct"
  bottom: "local/fc6"
  top: "local/fc7"
  inner_product_param {
    num_output: 4096
  }
}

layer {
  name: "local_relu7"
  type: "ReLU"
  bottom: "local/fc7"
  top: "local/fc7"
}
layer {
  name: "local_drop7"
  type: "Dropout"
  bottom: "local/fc7"
  top: "local/fc7"
}
layer {
  name: "local_68point"
  type: "InnerProduct"
  bottom: "local/fc7"
  top: "local/68point"
  inner_product_param {
    num_output: 136
  }
}

# tranform landmarks based on theta
layer {
  name: "inv_trans_pts"
  type: "PointTransformer"
  bottom: "local/68point"
  bottom: "theta"
  top: "inv_trans_pts"
  pt_param {
		in_width: 224
		in_height: 224
		out_width: 224
		out_height: 224
                inv_trans: true
   }
}



